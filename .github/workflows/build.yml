name: Build

on:
  workflow_call:
    outputs:
      dev-branch:
        value: ${{ jobs.build.outputs.dev-branch }}
      pre-release:
        value: ${{ jobs.build.outputs.pre-release }}
      release-branch:
          value: ${{ jobs.build.outputs.release-branch }}
      version: 
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      # convert PublicRelease to a boolean by comparing the string value to 'true'
      dev-branch: ${{ steps.relInfo.outputs.onDevelopBranch == 'true'}}
      pre-release: ${{ steps.relInfo.outputs.preRelease == 'true'}}
      release-branch: ${{ steps.relInfo.outputs.onReleaseBranch == 'true'}}
      version: ${{ steps.relInfo.outputs.extensionVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0 # fetch-depth 0 needed for NBGV
      - name: Nerdbank.GitVersioning
        uses: dotnet/nbgv@v0.4.2
        id: nbgv
      - name: Install Dependencies
        run: npm ci
      - name: Calculate Release Info
        id: relInfo
        uses: actions/github-script@v7.0.1
        env:
          GIT_COMMIT_ID_SHORT: ${{ steps.nbgv.outputs.GitCommitIdShort }}
          SIMPLE_VERSION: ${{ steps.nbgv.outputs.SimpleVersion }}
        with:
          script: |
            const { GIT_COMMIT_ID_SHORT, SIMPLE_VERSION } = process.env;

            const onMainBranch = context.ref === 'refs/heads/main';
            const onReleaseBranch = context.ref.startsWith('refs/heads/release/');

            // only builds from main or a release branch are ever published to VS Code Marketplace
            const onPublicationBranch = onMainBranch || onReleaseBranch;

            // builds that can be published to the marketplace must use simple version
            // other builds use a prerelease tag generated from the git commit id
            // https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions
            const version = onPublicationBranch 
              ? SIMPLE_VERSION 
              : `${SIMPLE_VERSION}-g${GIT_COMMIT_ID_SHORT}`;

            // releases from main branch are marked as pre-release 
            const preRelease = onMainBranch ? true : false;

            core.setOutput('preRelease', preRelease);
            core.setOutput('version', version);

      - name: Dump Release Info
        env:
          REL_INFO: ${{ toJson(steps.relInfo.outputs) }}
        run: echo "$REL_INFO"
      - name: Pack Extension
        if: ${{ steps.relInfo.outputs.preRelease != 'true' }}
        run: npx vsce pack ${{ steps.relInfo.outputs.version }} --no-git-tag-version 
      - name: Pack Pre-Release Extension
        if: ${{ steps.relInfo.outputs.preRelease == 'true' }} 
        run: npx vsce pack ${{ steps.relInfo.outputs.version }} --no-git-tag-version --pre-release  
      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v4.3.0
        with: 
          name: Extension
          path: dbos-ttdbg*.vsix
